# Copyright (c) 2018 Norio Nomura
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Copyright (c) 2022 Jaehong Kang
# Licensed under Apache License v2.0

name: Tests

on:
  push:
    paths: 
      - '.github/workflows/tests.yml'
      - 'action.yml'
      - 'swiftlint.sh'
  pull_request:
    paths: 
      - '.github/workflows/tests.yml'
      - 'action.yml'
      - 'swiftlint.sh'

jobs:
  actions-tests:
    name: Actions Tests
    strategy:
      fail-fast: false
      matrix:
        virtual-environment: ["ubuntu-18.04", "ubuntu-20.04", "macos-11", "macos-12"]
        swift-version: ["5.5.3", "5.6.1"]
        swiftlint-version: ["0.47.1", "master", "809dcc6bdcf40b35fc23c01086fa884f84ad9473"]

    runs-on: ${{ matrix.virtual-environment }}
    steps:
      - uses: actions/checkout@master
      - uses: sinoru/actions-setup-swift@main
        with:
          swift-version: ${{ matrix.swift-version }}
      - uses: ./
        with:
          working-directory: test/Warnings
          swiftlint-version: ${{ matrix.swiftlint-version }}

  swiftlint-tests:
    name: SwiftLint Tests
    runs-on: ubuntu-latest
    env:
      SWIFTLINT_VERSION: '0.47.1'
    steps:
      - uses: actions/checkout@master
      - uses: sinoru/actions-setup-swift@main
        with:
          swift-version: '5.6.1'
      - run: |
          export SWIFTLINT_PATH="$(cd ${{ github.workspace }} && pwd -L)/SwiftLint"

          echo SWIFTLINT_OS_VERSION_HASH="$(uname -prsv | openssl dgst -sha256 -binary | xxd -p -c 256)" >> $GITHUB_ENV
          echo SWIFTLINT_PATH="$SWIFTLINT_PATH" >> $GITHUB_ENV
          echo SWIFTLINT_PACKAGE_ARGS="--package-path "$SWIFTLINT_PATH" -c release --manifest-cache local --disable-index-store --use-integrated-swift-driver" >> $GITHUB_ENV
      - run: |
          git init -q "${{ env.SWIFTLINT_PATH }}"

          pushd "${{ env.SWIFTLINT_PATH }}"
          git remote add origin https://github.com/realm/SwiftLint.git
          git fetch --no-tags --prune --progress --no-recurse-submodules --depth 1 origin "${{ inputs.swiftlint-version }}"
          git checkout --progress --force FETCH_HEAD
          popd
        shell: bash
      - uses: actions/cache@v3
        id: cache
        with:
          path: '${{ env.SWIFTLINT_PATH }}/.build'
          key: sinoru-actions-swiftlint-${{ runner.os }}-${{ env.SWIFTLINT_OS_VERSION_HASH }}-swift-${{ env.SWIFT_VERSION }}-${{ inputs.swiftlint-version }}
          restore-keys: |
            sinoru-actions-swiftlint-${{ runner.os }}-${{ env.SWIFTLINT_OS_VERSION_HASH }}-swift-${{ env.SWIFT_VERSION }}-
            sinoru-actions-swiftlint-${{ runner.os }}-${{ env.SWIFTLINT_OS_VERSION_HASH }}-swift-
      - name: swift build
        run: swift build $SWIFTLINT_PACKAGE_ARGS

      - name: Exit Status on Errors
        run: |
          STATUS=$(${{ github.workspace }}/swiftlint.sh &>/dev/null; echo $?)
          echo $STATUS
          [[ $STATUS == "2" ]]
        shell: bash
        working-directory: test/errors

      - name: Exit Status on No lintable files
        run: |
          STATUS=$(${{ github.workspace }}/swiftlint.sh &>/dev/null; echo $?)
          echo $STATUS
          [[ $STATUS == "1" ]]
        shell: bash
        working-directory: test/no-lintable-files

      - name: Exit Status on Warnings
        run: |
          STATUS=$(${{ github.workspace }}/swiftlint.sh &>/dev/null; echo $?)
          echo $STATUS
          [[ $STATUS == "0" ]]
        shell: bash
        working-directory: test/Warnings

      - name: Exit Status on Warnings with `--strict`
        run: |
          STATUS=$(${{ github.workspace }}/swiftlint.sh --strict &>/dev/null; echo $?)
          echo $STATUS
          [[ $STATUS == "2" ]]
        shell: bash
        working-directory: test/Warnings
      
      - name: Output on Errors
        run: |
          diff <(${{ github.workspace }}/swiftlint.sh|sort) expected.txt
        shell: bash
        working-directory: test/errors
    
      - name: Output on Warnings
        run: |
          diff <(${{ github.workspace }}/swiftlint.sh|sort) expected.txt
        shell: bash
        working-directory: test/Warnings
